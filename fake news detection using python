import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, classification_report

# Load the dataset
data = pd.read_csv('fake_news.csv') # Ensure 'fake_news.csv' is in your working directory

# Preprocess the data
X = data['text'] # Feature column y = data['label'] # Target column

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
# Convert text data to numerical features vectorizer = TfidfVectorizer()
X_train_vectorized = vectorizer.fit_transform(X_train) X_test_vectorized = vectorizer.transform(X_test)

# Create a Naive Bayes classifier clf = MultinomialNB()

# Train the classifier clf.fit(X_train_vectorized, y_train)

# Make predictions on the testing set y_pred = clf.predict(X_test_vectorized)

# Evaluate the model

accuracy = accuracy_score(y_test, y_pred) print("Accuracy:", accuracy) print(classification_report(y_test,Â y_pred))
